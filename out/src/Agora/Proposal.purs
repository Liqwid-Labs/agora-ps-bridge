-- File auto generated by purescript-bridge! --
module Agora.Proposal where

import Agora.Proposal.Time (ProposalStartingTime, ProposalTimingConfig)
import Agora.SafeMoney (GTTag)
import Data.Generic.Rep (class Generic)
import Data.Lens (Iso', Lens', Prism', lens, prism')
import Data.Lens.Iso.Newtype (_Newtype)
import Data.Lens.Record (prop)
import Data.Maybe (Maybe(..))
import Data.Newtype (class Newtype)
import Data.Symbol (SProxy(SProxy))
import Data.Tagged (Tagged)
import GHC.Num.Integer (Integer)
import PlutusLedgerApi.V1.Crypto (PubKeyHash)
import PlutusLedgerApi.V1.Scripts (DatumHash, ValidatorHash)
import PlutusLedgerApi.V1.Value (AssetClass)
import PlutusTx.AssocMap (Map)
import Prim (Array)

import Prelude

newtype ProposalId =
    ProposalId {
      proposalTag :: Integer
    }

derive instance genericProposalId :: Generic ProposalId _
derive instance newtypeProposalId :: Newtype ProposalId _

--------------------------------------------------------------------------------
_ProposalId :: Iso' ProposalId { proposalTag :: Integer}
_ProposalId = _Newtype

--------------------------------------------------------------------------------
newtype ResultTag =
    ResultTag {
      getResultTag :: Integer
    }

derive instance genericResultTag :: Generic ResultTag _
derive instance newtypeResultTag :: Newtype ResultTag _

--------------------------------------------------------------------------------
_ResultTag :: Iso' ResultTag { getResultTag :: Integer}
_ResultTag = _Newtype

--------------------------------------------------------------------------------
data ProposalStatus =
    Draft
  | VotingReady
  | Locked
  | Finished

derive instance genericProposalStatus :: Generic ProposalStatus _

--------------------------------------------------------------------------------
_Draft :: Prism' ProposalStatus Unit
_Draft = prism' (\_ -> Draft) f
  where
    f Draft = Just unit
    f _ = Nothing

_VotingReady :: Prism' ProposalStatus Unit
_VotingReady = prism' (\_ -> VotingReady) f
  where
    f VotingReady = Just unit
    f _ = Nothing

_Locked :: Prism' ProposalStatus Unit
_Locked = prism' (\_ -> Locked) f
  where
    f Locked = Just unit
    f _ = Nothing

_Finished :: Prism' ProposalStatus Unit
_Finished = prism' (\_ -> Finished) f
  where
    f Finished = Just unit
    f _ = Nothing

--------------------------------------------------------------------------------
newtype ProposalThresholds =
    ProposalThresholds {
      execute :: Tagged GTTag Integer
    , create :: Tagged GTTag Integer
    , vote :: Tagged GTTag Integer
    }

derive instance genericProposalThresholds :: Generic ProposalThresholds _
derive instance newtypeProposalThresholds :: Newtype ProposalThresholds _

--------------------------------------------------------------------------------
_ProposalThresholds :: Iso' ProposalThresholds { execute :: Tagged GTTag Integer, create :: Tagged GTTag Integer, vote :: Tagged GTTag Integer}
_ProposalThresholds = _Newtype

--------------------------------------------------------------------------------
newtype ProposalVotes =
    ProposalVotes {
      getProposalVotes :: Map ResultTag Integer
    }

derive instance genericProposalVotes :: Generic ProposalVotes _
derive instance newtypeProposalVotes :: Newtype ProposalVotes _

--------------------------------------------------------------------------------
_ProposalVotes :: Iso' ProposalVotes { getProposalVotes :: Map ResultTag Integer}
_ProposalVotes = _Newtype

--------------------------------------------------------------------------------
newtype ProposalDatum =
    ProposalDatum {
      proposalId :: ProposalId
    , effects :: Map ResultTag (Map ValidatorHash DatumHash)
    , status :: ProposalStatus
    , cosigners :: Array PubKeyHash
    , thresholds :: ProposalThresholds
    , votes :: ProposalVotes
    , timingConfig :: ProposalTimingConfig
    , startingTime :: ProposalStartingTime
    }

derive instance genericProposalDatum :: Generic ProposalDatum _
derive instance newtypeProposalDatum :: Newtype ProposalDatum _

--------------------------------------------------------------------------------
_ProposalDatum :: Iso' ProposalDatum { proposalId :: ProposalId, effects :: Map ResultTag (Map ValidatorHash DatumHash), status :: ProposalStatus, cosigners :: Array PubKeyHash, thresholds :: ProposalThresholds, votes :: ProposalVotes, timingConfig :: ProposalTimingConfig, startingTime :: ProposalStartingTime}
_ProposalDatum = _Newtype

--------------------------------------------------------------------------------
data ProposalRedeemer =
    Vote ResultTag
  | Cosign (Array PubKeyHash)
  | Unlock ResultTag
  | AdvanceProposal

derive instance genericProposalRedeemer :: Generic ProposalRedeemer _

--------------------------------------------------------------------------------
_Vote :: Prism' ProposalRedeemer ResultTag
_Vote = prism' Vote f
  where
    f (Vote a) = Just $ a
    f _ = Nothing

_Cosign :: Prism' ProposalRedeemer (Array PubKeyHash)
_Cosign = prism' Cosign f
  where
    f (Cosign a) = Just $ a
    f _ = Nothing

_Unlock :: Prism' ProposalRedeemer ResultTag
_Unlock = prism' Unlock f
  where
    f (Unlock a) = Just $ a
    f _ = Nothing

_AdvanceProposal :: Prism' ProposalRedeemer Unit
_AdvanceProposal = prism' (\_ -> AdvanceProposal) f
  where
    f AdvanceProposal = Just unit
    f _ = Nothing

--------------------------------------------------------------------------------
newtype Proposal =
    Proposal {
      governorSTAssetClass :: AssetClass
    , stakeSTAssetClass :: AssetClass
    , maximumCosigners :: Integer
    }

derive instance genericProposal :: Generic Proposal _
derive instance newtypeProposal :: Newtype Proposal _

--------------------------------------------------------------------------------
_Proposal :: Iso' Proposal { governorSTAssetClass :: AssetClass, stakeSTAssetClass :: AssetClass, maximumCosigners :: Integer}
_Proposal = _Newtype

--------------------------------------------------------------------------------
